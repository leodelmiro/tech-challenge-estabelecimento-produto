name: 2 - [DEVELOP] Build app e Push Image

on:
  pull_request:
    types:
      - "closed"
    branches:
      - "develop"

jobs:
  build-app:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Compile
        run: mvn -B compile --file ./pom.xml
      - name: Build a package
        run: mvn -B package --file ./pom.xml
      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1
  push-image:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: target/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push image
        uses: docker/build-push-action@v3
        with:
          context: .
          registry: ${{ steps.login-ecr.outputs.registry }}
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/fiap-estabelecimento
      - name: Image Created
        id: image-created
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          gh_pr_up() { gh pr create "$@" || gh pr edit "$@" ; }
          gh_pr_up --title "Develop para main" --base "main" --body "$(cat <<EOF
            Deploy para Imagem:
          
            ```
            ${{ steps.image-created.outputs.image }}
            ```

          EOF
          )"