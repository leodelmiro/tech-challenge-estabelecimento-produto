@startuml Clean Architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

Person(estabelecimento, "Estabelecimento", "Pessoa que gerencia o estabelecimento")

System_Boundary(editaProduto, "Edita Produto") {
    Component(produtoApi, "ProdutoApi", "API", "Recebe requisições HTTP e delega para o controller")
    Component(produtoController, "ProdutoController", "Controller", "Recebe requisições e delega para o caso de uso")
    Component(editaProdutoUseCase, "EditaProdutoUseCase", "Caso de Uso", "Contém a lógica de negócio para edição de produto")
    Component(produto, Produto, "Entidade", "Modelos de domínio")
    Component(buscaProdutoUseCase, "BuscaProdutoUseCase", "Gateway", "Contém a lógica de negócio para buscar dados de um produto")
    Component(editaProdutoGateway, "EditaProdutoGateway", "Gateway", "Acesso a inteface de comunicação externa")
    Component(produtoRepository, "ProdutoRepository", "Repositório", "Acesso a dados e persistência")
    ComponentDb(clienteDb, "Cliente DB", "Banco de Dados", "Banco de Dados com informações de Produto")

    Rel(estabelecimento, produtoApi, "Usa", "HTTP PUT /api/v1/produtos/{idProduto}")
    Rel(produtoApi, produtoController, "Chama", "Método")
    Rel(produtoController, editaProdutoUseCase, "Usa", "Interface de Caso de Uso")
    Rel(editaProdutoUseCase, produto, "Manipula", "Objeto de Domínio")
    Rel(editaProdutoUseCase, buscaProdutoUseCase, "Manipula", "Objeto de Domínio")
    Rel(editaProdutoUseCase, editaProdutoGateway, "Usa", "Interface de Repositório")
    Rel(editaProdutoGateway, produtoRepository, "Usa", "Interface de Repositório")
    Rel(produtoRepository, clienteDb, "Usa", "Spring Data")
}

SHOW_LEGEND()
@enduml